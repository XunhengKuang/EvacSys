{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      codeImg: '',\n      uuid: '',\n      form: {\n        role: 'ADMIN'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.getCode();\n  },\n  methods: {\n    getCode() {\n      this.uuid = generateUUID();\n      this.codeImg = this.$baseUrl + '/validateCode?key=' + this.uuid;\n    },\n    login() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.form.key = this.uuid;\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 存储用户数据\n              this.$router.push('/'); // 跳转主页\n              this.$message.success('登录成功');\n            } else {\n              this.getCode();\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};\nfunction generateUUID() {\n  let d = new Date().getTime();\n  if (window.performance && typeof window.performance.now === \"function\") {\n    d += performance.now(); //use high-precision timer if available\n  }\n\n  let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n  return uuid;\n}","map":{"version":3,"names":["name","data","codeImg","uuid","form","role","rules","username","required","message","trigger","password","created","getCode","methods","generateUUID","$baseUrl","login","$refs","validate","valid","key","$request","post","then","res","code","localStorage","setItem","JSON","stringify","$router","push","$message","success","error","msg","d","Date","getTime","window","performance","now","replace","c","r","Math","random","floor","toString"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div style=\"width: 380px; padding: 30px; background-color: rgba(255, 255, 255, .6); border-radius: 5px;\">\n      <div style=\"text-align: center; font-size: 24px; margin-bottom: 30px; color: #333\">欢迎使用应急管理系统</div>\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item prop=\"username\">\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"role\">\n          <el-select size=\"medium\" v-model=\"form.role\" style=\"width: 100%\">\n            <el-option value=\"USER\" label=\"用户\"></el-option>\n            <el-option value=\"ADMIN\" label=\"管理员\"></el-option>\n            <el-option value=\"VOLUNTEER\" label=\"安保\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <div style=\"display: flex\">\n            <el-input size=\"medium\" style=\"flex: 1\" v-model=\"form.code\" placeholder=\"请输入验证码\"></el-input>\n            <div style=\"flex: 1; margin-left: 10px\"><img @click=\"getCode()\" :src=\"codeImg\" style=\"width: 100%; height: 35px\"/></div>\n          </div>\n        </el-form-item>\n        <el-form-item>\n          <el-button size=\"medium\" type=\"primary\" style=\"width: 100%;\" @click=\"login\">登 录</el-button>\n        </el-form-item>\n\n        <div style=\"display: flex; align-items: center\">\n          <div style=\"flex: 1\"></div>\n          <div style=\"flex: 1; text-align: right\">\n            还没有账号？请 <a href=\"/register\">注册</a>\n          </div>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      codeImg: '',\n      uuid: '',\n      form: { role: 'ADMIN' },\n      rules: {\n        username: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n        ]\n      },\n    }\n  },\n  created() {\n    this.getCode()\n  },\n  methods: {\n    getCode() {\n      this.uuid = generateUUID()\n      this.codeImg = this.$baseUrl + '/validateCode?key=' + this.uuid\n    },\n    login() {\n      this.$refs['formRef'].validate((valid) => {\n        if (valid) {\n          // 验证通过\n          this.form.key=this.uuid\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 存储用户数据\n              this.$router.push('/')  // 跳转主页\n              this.$message.success('登录成功')\n            } else {\n              this.getCode();\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      })\n    }\n  }\n}\nfunction generateUUID() {\n  let d = new Date().getTime();\n  if (window.performance && typeof window.performance.now === \"function\") {\n    d += performance.now(); //use high-precision timer if available\n  }\n  let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n  });\n  return uuid;\n}\n</script>\n\n<style scoped>\n.container {\n  height: 100vh;\n  overflow: hidden;\n  background-image: url(\"@/assets/imgs/bg.jpg\");\n  background-size: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #666;\n}\na {\n  color: #2a60c9;\n}\n</style>"],"mappings":";AAwCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,IAAA;MACAC,IAAA;QAAAC,IAAA;MAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACAD,QAAA;MACA,KAAAV,IAAA,GAAAY,YAAA;MACA,KAAAb,OAAA,QAAAc,QAAA,+BAAAb,IAAA;IACA;IACAc,MAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAhB,IAAA,CAAAiB,GAAA,QAAAlB,IAAA;UACA,KAAAmB,QAAA,CAAAC,IAAA,gBAAAnB,IAAA,EAAAoB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACAC,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAL,GAAA,CAAAxB,IAAA;cACA,KAAA8B,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAArB,OAAA;cACA,KAAAoB,QAAA,CAAAE,KAAA,CAAAV,GAAA,CAAAW,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA;AACA,SAAArB,aAAA;EACA,IAAAsB,CAAA,OAAAC,IAAA,GAAAC,OAAA;EACA,IAAAC,MAAA,CAAAC,WAAA,WAAAD,MAAA,CAAAC,WAAA,CAAAC,GAAA;IACAL,CAAA,IAAAI,WAAA,CAAAC,GAAA;EACA;;EACA,IAAAvC,IAAA,0CAAAwC,OAAA,oBAAAC,CAAA;IACA,IAAAC,CAAA,IAAAR,CAAA,GAAAS,IAAA,CAAAC,MAAA;IACAV,CAAA,GAAAS,IAAA,CAAAE,KAAA,CAAAX,CAAA;IACA,QAAAO,CAAA,WAAAC,CAAA,GAAAA,CAAA,cAAAI,QAAA;EACA;EACA,OAAA9C,IAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}